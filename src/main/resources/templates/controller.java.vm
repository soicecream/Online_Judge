package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.example.demo.common.Result;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

        @Resource
        private ${table.serviceName} ${table.entityPath}Service;


        // 新增或者更新
        @PostMapping
        public Result save(@RequestBody ${entity} ${table.entityPath}) {
                return Result.success(${table.entityPath}Service.saveOrUpdate(${table.entityPath}));
        }


        // 根据id删除
        @DeleteMapping("/{id}")
        public Result delete(@PathVariable Integer id) {
                return Result.success(${table.entityPath}Service.removeById(id));
        }

        // 以id来删除多条数据     数据是 [1, 2, 3] 这样的
        @PostMapping("/delete/batch")
        public Result deleteBatch(@RequestBody List<Integer> list) {
                return Result.success(${table.entityPath}Service.removeByIds(list));
        }


        // 根据id查询数据
        @GetMapping("/{id}")
        public Result findOne(@PathVariable Integer id) {
                return Result.success(${table.entityPath}Service.getById(id));
        }

        // 查询所有数据
        @GetMapping("")
        public Result findOne() {
                return Result.success(${table.entityPath}Service.list());
        }

        // 分页查询     limit第一个参数 = (pageNum - 1) * pageSize
        @GetMapping("/page")
        public Result findPage(@RequestParam Integer pageNum,
                                        @RequestParam Integer pageSize,
                                        @RequestParam(defaultValue = "false") Boolean desc) {
                QueryWrapper<${entity}> queryWrapper = new QueryWrapper<>();
                if(desc) queryWrapper.orderByDesc("id"); // 是否根据id排序

                return Result.success(${table.entityPath}Service.page(new Page<>(pageNum, pageSize), queryWrapper));
        }

}

#end